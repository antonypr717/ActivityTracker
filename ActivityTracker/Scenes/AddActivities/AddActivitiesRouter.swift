//
//  AddActivitiesRouter.swift
//  ActivityTracker
//
//  Created by Antony Raphel on 04/12/18.
//  Copyright (c) 2018 Antony Raphel. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol AddActivitiesRoutingLogic {
    func routeToBack()
    func routeToAddMember(at index: Int, isLast: Bool)
}

protocol AddActivitiesDataPassing {
    var dataStore: AddActivitiesDataStore? { get }
}

class AddActivitiesRouter: NSObject, AddActivitiesRoutingLogic, AddActivitiesDataPassing {
    weak var viewController: AddActivitiesViewController?
    var dataStore: AddActivitiesDataStore?
    
    // MARK: Routing
    
    func routeToBack() {
        viewController?.navigationController?.popViewController(animated: true)
    }
    
    func routeToAddMember(at index: Int, isLast: Bool) {
        let vc = viewController?.storyboard?.instantiateViewController(withIdentifier: "AddMembersViewController") as! AddMembersViewController
        dataStore!.member = nil
        if dataStore!.members.count > 0,
            !isLast {
            dataStore!.member = dataStore!.members[index]
            var destinationDS = vc.router!.dataStore!
            passDataToVC(source: dataStore!, destination: &destinationDS)
        }
        
        vc.completionHandler = { [weak self] member in
            guard let strongSelf = self else { return }
            strongSelf.dataStore!.member = member
            strongSelf.viewController?.addMember()
        }
        viewController?.navigationController?.pushViewController(vc, animated: true)
    }
    
    //MARK: Passing data
    
    func passDataToVC(source: AddActivitiesDataStore, destination: inout AddMembersDataStore) {
        destination.member = source.member
    }
}
