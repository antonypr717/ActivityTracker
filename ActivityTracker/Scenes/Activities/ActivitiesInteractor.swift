//
//  ActivitiesInteractor.swift
//  ActivityTracker
//
//  Created by Antony Raphel on 03/12/18.
//  Copyright (c) 2018 Antony Raphel. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ActivitiesBusinessLogic {
    func doSomething(request: Activities.Fetch.Request)
}

protocol ActivitiesDataStore {
    var activity: [ActivityEntity] { get set }
}

class ActivitiesInteractor: ActivitiesBusinessLogic, ActivitiesDataStore {
    var presenter: ActivitiesPresentationLogic?
    lazy var worker = ActivitiesWorker()
    var activity: [ActivityEntity] = []
    
    // MARK: Do something
    
    func doSomething(request: Activities.Fetch.Request) {
        worker.fetchActivity { [weak self] (result) in
            guard let strongSelf = self else { return }
            strongSelf.activity = result
            let response = Activities.Fetch.Response(activity: result)
            strongSelf.presenter?.presentSomething(response: response)
        }
    }
}
