//
//  ActivitiesWorker.swift
//  ActivityTracker
//
//  Created by Antony Raphel on 03/12/18.
//  Copyright (c) 2018 Antony Raphel. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import CoreData

class ActivitiesWorker {
    func fetchActivity(handler: @escaping ([ActivityEntity]) -> Void) {
        let context = CoreDataManager.shared.mainContext
        let fetchReq: NSFetchRequest<ActivityEntity> = ActivityEntity.fetchRequest()
        fetchReq.sortDescriptors = [NSSortDescriptor(key: "dueDate", ascending: true)]
        do {
            if let activity = try context?.fetch(fetchReq) {
                handler(activity)
            }
        }
        catch {}
    }
    
    func saveTime(title: String, seconds: Double) {
        if let context = CoreDataManager.shared.mainContext {
            let fetchReq: NSFetchRequest<ActivityEntity> = ActivityEntity.fetchRequest()
            fetchReq.predicate = NSPredicate(format: "title = %@", title)
            if let results = try? context.fetch(fetchReq),
                let item = results.first {
                item.timer = seconds
            }
            CoreDataManager.shared.saveMainContext()
        }
    }
    
    func getSeconds(title: String) -> Int {
        if let context = CoreDataManager.shared.mainContext {
            let fetchReq: NSFetchRequest<ActivityEntity> = ActivityEntity.fetchRequest()
            fetchReq.predicate = NSPredicate(format: "title = %@", title)
            if let results = try? context.fetch(fetchReq),
                let item = results.first {
                return Int(item.timer)
            }
            return 0
        }
        return 0
    }
}
